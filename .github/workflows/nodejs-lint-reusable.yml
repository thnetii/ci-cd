name: Node.js Code Validation

on:
  workflow_call: # Reusable workflow
    inputs:
      checkout-parameters:
        type: string
        default: "{}"
        description: >
          A JSON object string specifying the inputs for the actions/checkout
          GitHub action.
      setup-node-parameters:
        type: string
        default: '{"node-version": "20.x"}'
        description: >
          A JSON object string specifying the inputs for the actions/setup-node
          GitHub action.
      npm-install-working-directory:
        type: string
        required: false
        description: |
          Optional. The working directory from which the npm command to install
          packages for the checked out code is run from.
      npm-install-check-enable:
        type: boolean
        default: true
        description: |
          Whether the output of the npm install command should be checked for
          warning and error messages.
          If true, warnings and errors will be reported to GitHub actions.
      npm-install-command:
        type: string
        default: "clean-install"
        description: |
          The npm command to run in order to install package dependencies.
      npm-install-arguments:
        type: string
        default: "[]"
        description: |
          Optional. Additional argument passed to the npm install command during
          package installation.
      tsc-check-enable:
        type: boolean
        default: false
        description: |
          Whether the TypeScript type checker job should be executed.
      tsc-parameters:
        type: string
        default: '{"arguments": "--noEmit"}'
        description: >
          A JSON object string specifying the inputs for the
          thnetii/ci-cd/.github/actions/gh-actions-tsc GitHub action.
      eslint-check-enable:
        type: boolean
        default: true
        description: |
          Whether the ESLint checker job should be executed.
      eslint-parameters:
        type: string
        default: "{}"
        description: >
          A JSON object string specifying the inputs for the
          thnetii/ci-cd/.github/actions/gh-actions-eslint GitHub action.
      prettier-check-enable:
        type: boolean
        default: true
        description: |
          Whether the Prettier checker job should be executed.
      prettier-parameters:
        type: string
        default: "{}"
        description: >
          A JSON object string specifying the inputs for the
          thnetii/ci-cd/.github/actions/gh-actions-prettier GitHub action.

jobs:
  npm:
    name: Npm Packages
    if: inputs.npm-install-check-enable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4.1.4
        with: ${{ fromJSON(inputs.checkout-parameters) }}
      - name: Setup Github Actions for Node.js
        uses: actions/setup-node@v4.0.2
        with: ${{ fromJSON(inputs.setup-node-parameters) }}
      - name: Run npm install command
        uses: thnetii/ci-cd/.github/actions/gh-actions-npm@main
        with:
          working-directory: ${{ inputs.npm-install-working-directory }}
          arguments: |
            ${{ inputs.npm-install-command }}
            ${{ join(fromJSON(inputs.npm-install-arguments), '
            ') }}

  tsc:
    name: TypeScript type check
    if: inputs.tsc-check-enable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4.1.4
        with: ${{ fromJSON(inputs.checkout-parameters) }}
      - name: Setup Github Actions for Node.js
        uses: actions/setup-node@v4.0.2
        with: ${{ fromJSON(inputs.setup-node-parameters) }}
      - name: Run npm install command
        uses: thnetii/ci-cd/.github/actions/gh-actions-exec@main
        with:
          command: npm
          arguments: |
            ${{ inputs.npm-install-command }}
            ${{ join(fromJSON(inputs.npm-install-arguments), '
            ') }}
          working-directory: ${{ inputs.npm-install-working-directory }}
      - name: Run TypeScript compiler command
        uses: thnetii/ci-cd/.github/actions/gh-actions-tsc@main
        with: ${{ fromJSON(inputs.tsc-parameters) }}

  eslint:
    name: ESLint
    if: inputs.eslint-check-enable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4.1.4
        with: ${{ fromJSON(inputs.checkout-parameters) }}
      - name: Setup Github Actions for Node.js
        uses: actions/setup-node@v4.0.2
        with: ${{ fromJSON(inputs.setup-node-parameters) }}
      - name: Run npm install command
        uses: thnetii/ci-cd/.github/actions/gh-actions-exec@main
        with:
          command: npm
          arguments: |
            ${{ inputs.npm-install-command }}
            ${{ join(fromJSON(inputs.npm-install-arguments), '
            ') }}
          working-directory: ${{ inputs.npm-install-working-directory }}
      - name: Run ESLint command
        uses: thnetii/ci-cd/.github/actions/gh-actions-eslint@main
        with: ${{ fromJSON(inputs.eslint-parameters) }}

  prettier:
    name: Prettier
    if: inputs.prettier-check-enable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4.1.4
        with: ${{ fromJSON(inputs.checkout-parameters) }}
      - name: Setup Github Actions for Node.js
        uses: actions/setup-node@v4.0.2
        with: ${{ fromJSON(inputs.setup-node-parameters) }}
      - name: Run npm install command
        uses: thnetii/ci-cd/.github/actions/gh-actions-exec@main
        with:
          command: npm
          arguments: |
            ${{ inputs.npm-install-command }}
            ${{ join(fromJSON(inputs.npm-install-arguments), '
            ') }}
          working-directory: ${{ inputs.npm-install-working-directory }}
      - name: Run Prettier check command
        uses: thnetii/ci-cd/.github/actions/gh-actions-prettier@main
        with: ${{ fromJSON(inputs.prettier-parameters) }}
